{"version":3,"sources":["components/Card/Card.js","App.js","serviceWorker.js","index.js"],"names":["Card","state","active","onHovered","clickHandler","_this","setState","mouseEnterHandler","mouseLeaveHandler","react_default","a","createElement","className","classnames","card","card--disabled","this","props","disabled","card--active","onClick","onMouseEnter","onMouseLeave","taste","portions","dangerouslySetInnerHTML","__html","gift","extraGift","weight","footerText","Component","concat","activeText","data","App","map","cardData","index","components_Card_Card","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9530e4b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as classnames from \"classnames\";\n\nclass Card extends Component {\n  state = {\n    active: false,\n    onHovered: false\n  };\n\n  clickHandler = () => {\n    this.setState({\n      active: !this.state.active,\n      onHovered: false\n    });\n  };\n\n  mouseEnterHandler = () => {\n    this.setState({\n      onHovered: true\n    });\n  };\n\n  mouseLeaveHandler = () => {\n    this.setState({\n      onHovered: false\n    });\n  };\n\n  render() {\n    return (\n      <li className={classnames({\n          'card': true,\n          'card--disabled': this.props.disabled,\n          'card--active': this.state.active }\n          )}\n          onClick={this.clickHandler}\n          onMouseEnter={this.mouseEnterHandler}\n          onMouseLeave={this.mouseLeaveHandler}>\n        <div className='card__content'>\n          <span className='card__description'>\n            {this.state.onHovered && this.state.active ? <span>Котэ не одобряет?</span>: 'Сказочное заморское яство'}\n          </span>\n          <h2 className='card__title'>Нямушка</h2>\n          <span className='card__subtitle'>{this.props.taste}</span>\n          <p className='card__feature'>\n            <span><b>{this.props.portions}</b> порций</span>\n            <span>\n            <span dangerouslySetInnerHTML={{__html: this.props.gift}}/> в подарок\n          </span>\n            <span>{this.props.extraGift}</span>\n          </p>\n          <div className='card__amount'>\n            <span className='card__amount-num'>{this.props.weight}</span>\n            <span className='card__amount-unit'>кг</span>\n          </div>\n        </div>\n\n        {footerText(this.props, this.state.active)}\n      </li>\n    );\n  }\n}\n\nconst footerText = (props, active) => {\n  if (props.disabled) {\n    return (\n      <p className='card__action-text'>\n        {`Печалька, ${props.taste} закончился.`}\n      </p>\n    )\n  } else if (active) {\n    return(\n      <p className='card__action-text'>\n        {props.activeText}\n      </p>\n    )\n  } else {\n    return (\n      <p className='card__action-text'>\n        Чего сидишь? Порадуй котэ, <span className='card__action-btn'>купи</span>\n      </p>\n    )\n  }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport './App.scss';\nimport Card from \"./components/Card/Card\";\n\nconst data = [\n  {\n    taste: 'с фуа-гра',\n    portions: '10',\n    gift: 'мышь',\n    extraGift: '',\n    weight: '0,5',\n    disabled: false,\n    activeText: 'Печень утки разварная с артишоками.'\n  },\n  {\n    taste: 'с рыбой',\n    portions: '40',\n    gift: '<b>2</b> мыши',\n    extraGift: '',\n    weight: '2',\n    disabled: false,\n    activeText: 'Головы щучьи с чесноком да свежайшая сёмгушка.'\n  },\n  {\n    taste: 'с курой',\n    portions: '100',\n    gift: '<b>5</b> мышей',\n    extraGift: 'заказчик доволен',\n    weight: '5',\n    disabled: true,\n    activeText: 'Филе из цыплят с трюфелями в бульоне.'\n  }\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"page\">\n        <h1 className='page__title'>Ты сегодня покормил кота?</h1>\n        <ul className='page__cards'>\n          {\n            data.map((cardData, index) => {\n              return <Card taste={cardData.taste}\n                           portions={cardData.portions}\n                           gift={cardData.gift}\n                           extraGift={cardData.extraGift}\n                           weight={cardData.weight}\n                           activeText={cardData.activeText}\n                           disabled={cardData.disabled}\n                           key={index}/>\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}